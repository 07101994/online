All communication consists of messages that are one line of
human-readable UTF-8 text optionally followed by a single newline and
binary data.

client -> server
================

load <url>

status

tile width=<width> height=<height> tileposx=<xpos> tileposy=<ypos> tilewidth=<tileWidth> tileheight=<tileHeight>

server -> client
================

error: cmd=<command> kind=<kind>
<freeErrorText>

status: type=<typeName> parts=<numberOfParts> current=<currentPartNumber> width=<width> height=<height>

tile: width=<width> height=<height> tileposx=<xpos> tileposy=<ypos> tilewidth=<tileWidth> tileheight=<tileHeight> 
<binaryPngImage>

Each LOK_CALLBACK_FOO_BAR callback causes a corresponding message to
the client, consisting of the FOO_BAR part in lowercase, without
underscore, followed by a colon, space and the callback payload. For
instance:

invalidatetiles: <payload>

invalidatecursor:



The communication between the parent process (the one keeping open the
Websocket connections to the clients) and a child process (handling
one document through LibreOfficeKit) uses the same protocol, with
the following additions and changes:

child -> parent
===============

child <id>

Must be the first message sent from the child to the parent. The
parent has passed the id (a 64-bit random number) to the child when
starting it, so this is how the child identificates itself.
